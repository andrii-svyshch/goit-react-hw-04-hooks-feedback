{"version":3,"sources":["Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","App.js","index.js","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","className","s","feedback","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","button","onClick","shortid","generate","Statistics","good","bad","neutral","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","console","log","args","reduce","a","b","countTotalFeedback","state","prevSate","target","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wQAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAEC,SAAtB,UACE,oBAAIF,UAAU,kBAAd,SAAiCF,IAChCC,K,oCCHQ,SAASI,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLC,KAAMF,EACNP,UAAWC,IAAES,OACbC,QAASN,EAJX,SAOGE,GAFIK,IAAQC,iBCXR,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,oBAAInB,UAAU,mBAAd,wBACA,qBAAIA,UAAU,kBAAd,UACE,qBAAIA,UAAU,kBAAd,mBAAuCe,KACvC,qBAAIf,UAAU,kBAAd,sBAA0CiB,KAC1C,qBAAIjB,UAAU,kBAAd,kBAAsCgB,KACtC,qBAAIhB,UAAU,kBAAd,oBAAwCkB,KACxC,qBAAIlB,UAAU,kBAAd,gCACsBmB,EADtB,aCfO,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,MCKE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAEAC,QAAQC,IAAIZ,GAEZ,IAsBME,EADqB,sCAAIW,EAAJ,yBAAIA,EAAJ,uBAAaA,EAAKC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACpDC,CAAmBlB,EAAMC,EAAKC,GAI5C,OACE,eAACpB,EAAD,CAASC,MAAM,wBAAf,UACE,cAACK,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA9BiB,SAAC,GAAgB,IAEhC6B,EAAQ,SAAAC,GAAQ,OAAIA,EAAW,GAErC,OAJqC,EAAbC,OAChB3B,MAIN,IAAK,OACHe,EAAQU,GACR,MAEF,IAAK,UACHT,EAAWS,GACX,MAEF,IAAK,MACHR,EAAOQ,OAmBRhB,EAAQ,EACP,cAACJ,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,mBAhBgC,SAACJ,EAAMG,GAAP,OAC5B,IAAVA,EAAcmB,KAAKC,MAAOvB,EAAOG,EAAS,KAAO,EAevBqB,CAAgCxB,EAAMG,KAG5D,cAACE,EAAD,CAAcC,QAAQ,yBCpD9BmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,4B,kBCA7BD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.084878b5.chunk.js","sourcesContent":["import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.feedback}>\r\n      <h2 className=\"feedback__title\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.array,\r\n};\r\n","import shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          type=\"button\"\r\n          name={option}\r\n          className={s.button}\r\n          onClick={onLeaveFeedback}\r\n          key={shortid.generate()}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  bad,\r\n  neutral,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <h2 className=\"statistic__title\">Statistics</h2>\r\n      <ul className=\"statistic__item\">\r\n        <li className=\"statistic__item\">Good: {good}</li>\r\n        <li className=\"statistic__item\">Neutral: {neutral}</li>\r\n        <li className=\"statistic__item\">Bad: {bad}</li>\r\n        <li className=\"statistic__item\">Total: {total}</li>\r\n        <li className=\"statistic__item\">\r\n          Positive feedback: {positivePercentage}%\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'Components/Section';\r\nimport FeedbackOptions from 'Components/FeedbackOptions';\r\nimport Statistics from 'Components/Statistics';\r\nimport Notification from 'Components/Notification';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  console.log(bad);\r\n\r\n  const handleFeedback = ({ target }) => {\r\n    const { name } = target;\r\n    const state = prevSate => prevSate + 1;\r\n\r\n    switch (name) {\r\n      case 'good':\r\n        setGood(state);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral(state);\r\n        break;\r\n\r\n      case 'bad':\r\n        setBad(state);\r\n        break;\r\n\r\n      // no default\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = (...args) => args.reduce((a, b) => a + b);\r\n  const total = countTotalFeedback(good, bad, neutral);\r\n  const countPositiveFeedbackPercentage = (good, total) =>\r\n    total !== 0 ? Math.round((good / total) * 100) : 0;\r\n\r\n  return (\r\n    <Section title=\"Please leave feedback\">\r\n      <FeedbackOptions\r\n        options={['good', 'neutral', 'bad']}\r\n        onLeaveFeedback={handleFeedback}\r\n      />\r\n\r\n      {total > 0 ? (\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={countPositiveFeedbackPercentage(good, total)}\r\n        />\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </Section>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Section_feedback__n1WNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2Kc06\"};"],"sourceRoot":""}