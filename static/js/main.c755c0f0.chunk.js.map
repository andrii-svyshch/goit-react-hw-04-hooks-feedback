{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","App.js","index.js","Components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","s","feedback","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","button","onClick","shortid","generate","Statistics","good","bad","neutral","total","positivePercentage","Notification","message","App","state","props","initialGood","initialNeutral","initialBad","handleFeedback","target","setState","prevState","countTotalFeedback","args","reduce","a","b","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,kC,yLCEZ,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAEC,SAAtB,UACE,oBAAIF,UAAU,kBAAd,SAAiCF,IAChCC,K,qCCHQ,SAASI,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLC,KAAMF,EACNP,UAAWC,IAAES,OACbC,QAASN,EAJX,SAOGE,GAFIK,IAAQC,iBCXR,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,oBAAInB,UAAU,mBAAd,wBACA,qBAAIA,UAAU,kBAAd,UACE,qBAAIA,UAAU,kBAAd,mBAAuCe,KACvC,qBAAIf,UAAU,kBAAd,sBAA0CiB,KAC1C,qBAAIjB,UAAU,kBAAd,kBAAsCgB,KACtC,qBAAIhB,UAAU,kBAAd,oBAAwCkB,KACxC,qBAAIlB,UAAU,kBAAd,gCACsBmB,EADtB,aCfO,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,UCMPC,E,4MAaJC,MAAQ,CACNR,KAAM,EAAKS,MAAMC,YACjBR,QAAS,EAAKO,MAAME,eACpBV,IAAK,EAAKQ,MAAMG,Y,EAGlBC,eAAiB,YAAiB,IAAdC,EAAa,EAAbA,OAClB,EAAKC,UAAS,SAAAC,GACZ,IAAQtB,EAASoB,EAATpB,KACR,OAAO,eACJA,EAAOsB,EAAUtB,GAAQ,O,EAKhCuB,mBAAqB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAaA,EAAKC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAE5DC,gCAAkC,SAACtB,EAAMG,GAAP,OACtB,IAAVA,EAAcoB,KAAKC,MAAOxB,EAAOG,EAAS,KAAO,G,4CAEnD,WACE,MAA+BsB,KAAKjB,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,QACbC,EAAQsB,KAAKR,mBAAmBjB,EAAMC,EAAKC,GAEjD,OACE,eAACpB,EAAD,CAASC,MAAM,wBAAf,UACE,cAACK,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBmC,KAAKZ,iBAGvBV,EAAQ,EACP,cAACJ,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,mBAAoBqB,KAAKH,gCACvBtB,EACAG,KAIJ,cAACE,EAAD,CAAcC,QAAQ,6B,GAxDdoB,aAAZnB,EACGoB,aAAe,CACpBjB,YAAa,EACbC,eAAgB,EAChBC,WAAY,GA2DDL,QCnEfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BpD,EAAOC,QAAU,CAAC,SAAW,6B","file":"static/js/main.c755c0f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2Kc06\"};","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.feedback}>\r\n      <h2 className=\"feedback__title\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.array,\r\n};\r\n","import shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          type=\"button\"\r\n          name={option}\r\n          className={s.button}\r\n          onClick={onLeaveFeedback}\r\n          key={shortid.generate()}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  bad,\r\n  neutral,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <h2 className=\"statistic__title\">Statistics</h2>\r\n      <ul className=\"statistic__item\">\r\n        <li className=\"statistic__item\">Good: {good}</li>\r\n        <li className=\"statistic__item\">Neutral: {neutral}</li>\r\n        <li className=\"statistic__item\">Bad: {bad}</li>\r\n        <li className=\"statistic__item\">Total: {total}</li>\r\n        <li className=\"statistic__item\">\r\n          Positive feedback: {positivePercentage}%\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Section from 'Components/Section';\nimport FeedbackOptions from 'Components/FeedbackOptions';\nimport Statistics from 'Components/Statistics';\nimport Notification from 'Components/Notification';\n\nimport './App.css';\n\nclass App extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialNeutral: 0,\n    initialBad: 0,\n  };\n\n  static propTypes = {\n    initialGood: PropTypes.number.isRequired,\n    initialNeutral: PropTypes.number.isRequired,\n    initialBad: PropTypes.number.isRequired,\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  handleFeedback = ({ target }) => {\n    this.setState(prevState => {\n      const { name } = target;\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = (...args) => args.reduce((a, b) => a + b);\n\n  countPositiveFeedbackPercentage = (good, total) =>\n    total !== 0 ? Math.round((good / total) * 100) : 0;\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const total = this.countTotalFeedback(good, bad, neutral);\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={this.handleFeedback}\n        />\n\n        {total > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={this.countPositiveFeedbackPercentage(\n              good,\n              total,\n            )}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Section_feedback__n1WNK\"};"],"sourceRoot":""}